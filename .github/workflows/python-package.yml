# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and Publish Python Packages


on: workflow_dispatch
#on:
#  push:
#    branches: [ workflow-test ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest build
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build package
        run: python -m build
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact_${{ matrix.python-version }}_${{ matrix.os }}
          path: dist/*.whl
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine flake8 pytest build
      #- name: Lint with flake8 for syntax errors
      #  run: |
      #    pip install flake8
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build source package
        run: python -m build --sdist
      - name: Build manylinux Python wheels
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64
        with:
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          build-requirements: 'cython numpy'
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact_ubuntu-latest
          path: |
            dist/*-manylinux*.whl
            dist/*.tar.gz
  publish:
    needs: [build, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          #name: my-artifact ${{ matrix.python-version }} ${{ matrix.os }}
          path: dist/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: dist/*

#      - name: Publish package to PyPI
#        uses: pypa/gh-action-pypi-publish@v1.5.0
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
#          packages_dir: dist/*

